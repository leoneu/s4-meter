/*
 * Copyright (c) 2010 Yahoo! Inc. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 	        http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the
 * License. See accompanying LICENSE file. 
 */

/*
 * S4 App Top Level Build Script
 *
 *
 * 
 */

apply plugin: "java"
apply plugin: 'eclipse'

version = new Version(major: 0, minor: 1, releaseType: 'SNAPSHOT')
//version = new Version(major: 0, minor: 2, releaseType: 'beta', bugfix: 2)

archivesBaseName = 'words'

/* Read environment variables. */
env = System.getenv()
s4Image = env['S4_IMAGE']

if (s4Image == null) {
    logger.warn("\nEnvironment variable S4_IMAGE not set.")
    System.exit(-1)
    }
 
sourceCompatibility = 1.6
targetCompatibility = 1.6
    
repositories {
    
    flatDir name: 's4core', dirs:  "${s4Image}/s4-core/lib"
    flatDir name: 's4driver', dirs:  "${s4Image}/s4-driver/lib/java"
    mavenLocal()
    mavenCentral()
}

/* All project libraries must be defined here. */
libraries = [
s4_core:            'io.s4:s4-core:0.3-SNAPSHOT',
s4_driver:          'io.s4:s4-driver:0.3-SNAPSHOT',
json:               'org.json:json:20090211',
log4j:              'log4j:log4j:1.2.15',
junit:              'junit:junit:3.8.1',
jakarta_regexp:     'jakarta-regexp:jakarta-regexp:1.4',
commons_logging:    'commons-logging:commons-logging:1.1.1',
spring:             'org.springframework:spring:2.5.6',
junit:              'junit:junit:4.4',
scala_compiler:     'org.scala-lang:scala-compiler:2.8.1',
scala_library:      'org.scala-lang:scala-library:2.8.1'
]

group = 'io.s4.apps'

/* Dependencies. */
dependencies { 
    compile( libraries.json )
    compile( libraries.log4j )
    compile( libraries.commons_logging )
    compile( libraries.spring )
    compile( libraries.s4_core )
    compile( libraries.s4_driver )
    testCompile( libraries.junit )
}

deployImage = copySpec {
    into ("s4-apps/" + project.name + "/lib") {
        from project.configurations.runtime
        from project.configurations.archives.allArtifactFiles
    }
    into ("s4-apps/" + project.name) {
        from project.sourceSets.main.resources
    }
}

task deploy(type: Copy) {
    description = "Copy app files to deployment dir."
    destinationDir = file(s4Image)
    with deployImage
}

task cleanDeployment(type: Delete) {
    delete("${s4Image}/s4-apps/${project.name}")
}

clean.dependsOn cleanDeployment

/* Generates the gradlew scripts.
http://www.gradle.org/1.0-milestone-1/docs/userguide/gradle_wrapper.html */ 
task wrapper(type: Wrapper) { 
    gradleVersion = '1.0-milestone-1' 
}

class Version {
    int major
    int minor
    int bugfix
    String releaseType
 
    String toString() {
        "$major.$minor-$releaseType${bugfix ?: ''}"
    }
}
